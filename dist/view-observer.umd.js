!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.viewObserver=r()}(this,function(){function e(e){return Array.isArray(e)?e.reduce(function(e,r){return r instanceof HTMLCollection?e.concat(Array.from(r)):e.concat([r])},[]):e instanceof HTMLCollection?Array.from(e):[e]}var r=function(e){var r=this;return this.intersectionObserver=new IntersectionObserver(function(e,t){e.forEach(function(e){var n=e.target;if(r.subscribers.has(n)){var o=r.subscribers.get(n);e.isIntersecting&&void 0!==o.enterCallback?(o.enterCallback(e),o.once&&(t.unobserve(n),r.subscribers.delete(o))):void 0!==o.leaveCallback&&o.leaveCallback(e)}})},e),this.subscribers=new Map,this};return r.prototype.observe=function(r){var t=this;return e(r).forEach(function(e){return t.intersectionObserver.observe(e)}),this},r.prototype.unobserve=function(r){var t=this;return e(r).forEach(function(e){return t.intersectionObserver.unobserve(e)}),this},r.prototype.subscribe=function(r,t,n){var o=this;return e(r).forEach(function(e){return o.subscribers.set(e,{once:!1,enterCallback:t,leaveCallback:n})}),this},r.prototype.subscribeOnce=function(r,t){var n=this;return e(r).forEach(function(e){return n.subscribers.set(e,{once:!0,enterCallback:t})}),this},r.prototype.disconnect=function(){this.intersectionObserver.disconnect()},r.prototype.takeRecords=function(){return this.intersectionObserver.takeRecords()},function(e){return new r(e)}});
//# sourceMappingURL=view-observer.umd.js.map
