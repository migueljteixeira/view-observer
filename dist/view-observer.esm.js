function unflatten(e){return Array.isArray(e)?e:[e]}var classCallCheck=function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")},createClass=function(){function e(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(r,n,t){return n&&e(r.prototype,n),t&&e(r,t),r}}(),_class=function(){function e(r){var n=this;return classCallCheck(this,e),this.intersectionObserver=new IntersectionObserver(function(e,r){e.forEach(function(e){var t=e.target;if(n.subscribers.has(t)){var s=n.subscribers.get(t);e.isIntersecting&&void 0!==s.enterCallback?(s.enterCallback(e),s.once&&(r.unobserve(t),n.subscribers.delete(s))):void 0!==s.leaveCallback&&s.leaveCallback(e)}})},r),this.subscribers=new Map,this}return createClass(e,[{key:"observe",value:function(e){var r=this;return unflatten(e).forEach(function(e){return r.intersectionObserver.observe(e)}),this}},{key:"unobserve",value:function(e){var r=this;return unflatten(e).forEach(function(e){return r.intersectionObserver.unobserve(e)}),this}},{key:"subscribe",value:function(e,r,n){var t=this;return unflatten(e).forEach(function(e){return t.subscribers.set(e,{once:!1,enterCallback:r,leaveCallback:n})}),this}},{key:"subscribeOnce",value:function(e,r){var n=this;return unflatten(e).forEach(function(e){return n.subscribers.set(e,{once:!0,enterCallback:r})}),this}},{key:"disconnect",value:function(){this.intersectionObserver.disconnect()}},{key:"takeRecords",value:function(){return this.intersectionObserver.takeRecords()}}]),e}();export default _class;
